{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-pak-prod-westeurope"
		},
		"copy_TEST_PAK_Azure_to_onPrem_properties_copy_TEST_PAK_Azure_to_onPrem_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"copy_TEST_PAK_Azure_to_onPrem_properties_copy_TEST_PAK_Azure_to_onPrem_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"copy_TEST_PAK_Azure_to_onPrem_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/50888be5-ad58-4821-afeb-b8114fdb5353/resourceGroups/rg-pak-prod-westeurope/providers/Microsoft.Storage/storageAccounts/sapakprodwesteurope"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy_PROD_PAK_Azure_to_onPrem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Data_PROD_PAK_Source_Azure",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@{pipeline().parameters.fileName}",
										"type": "Expression"
									},
									"folderPath": {
										"value": "@{pipeline().parameters.folderPath}",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Data_PROD_PAK_Sink_OnPrem",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@{pipeline().parameters.fileName}",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "PROD"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_PROD_PAK_OnPrem_to_Azure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata outputLake",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Metadata_PROD_PAK_Source_OnPrem_Folder",
								"type": "DatasetReference",
								"parameters": {
									"subFolder": {
										"value": "@{pipeline().parameters.subFolder}",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Folders",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata outputLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata outputLake').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Folders').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata Folder",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Metadata_PROD_PAK_Source_OnPrem",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": {
													"value": "@item().name",
													"type": "Expression"
												},
												"subFolder": {
													"value": "@{pipeline().parameters.subFolder}",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems",
											"itemName"
										],
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If Metadata is complete",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(\n    activity('Get Metadata Folder').output.childItems, \n    json('{\n        \"name\": \"complete\",\n        \"type\": \"File\"\n    }'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy_PAK",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FileServerReadSettings",
															"recursive": true,
															"deleteFilesAfterCompletion": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "Data_PROD_PAK_Source_OnPrem",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": {
																"value": "@activity('Get Metadata Folder').output.itemName",
																"type": "Expression"
															},
															"subFolder": {
																"value": "@{pipeline().parameters.subFolder}",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Data_PROD_PAK_Sink_Azure",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": {
																"value": "@activity('Get Metadata Folder').output.itemName",
																"type": "Expression"
															},
															"subFolder": {
																"value": "@{pipeline().parameters.subFolder}",
																"type": "Expression"
															},
															"year": {
																"value": "@{formatDateTime(pipeline().TriggerTime, 'yyyy')}",
																"type": "Expression"
															},
															"month": {
																"value": "@{formatDateTime(pipeline().TriggerTime, 'MM')}",
																"type": "Expression"
															},
															"day": {
																"value": "@{formatDateTime(pipeline().TriggerTime, 'dd')}",
																"type": "Expression"
															},
															"basePath": {
																"value": "@{pipeline().parameters.basePath}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Trigger Databricks Job",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "copy_PAK",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "trigger_prod_pak_databricks_workflow",
														"type": "PipelineReference"
													},
													"waitOnCompletion": false,
													"parameters": {
														"environment": {
															"value": "@{pipeline().parameters.environment}",
															"type": "Expression"
														},
														"folderPath": {
															"value": "@{pipeline().parameters.subFolder}/@{formatDateTime(pipeline().TriggerTime, 'yyyy')}/@{formatDateTime(pipeline().TriggerTime, 'MM')}/@{formatDateTime(pipeline().TriggerTime, 'dd')}/@{activity('Get Metadata Folder').output.itemName}",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"subFolder": {
						"type": "string"
					},
					"basePath": {
						"type": "string",
						"defaultValue": "raw"
					},
					"environment": {
						"type": "string",
						"defaultValue": "prod"
					}
				},
				"folder": {
					"name": "PROD/subpipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_TEST_PAK_Azure_to_onPrem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Data_TEST_PAK_Source_Azure",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@{pipeline().parameters.fileName}",
										"type": "Expression"
									},
									"folderPath": {
										"value": "@{pipeline().parameters.folderPath}",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Data_TEST_PAK_Sink_OnPrem",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@{pipeline().parameters.fileName}",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_TEST_PAK_OnPrem_to_Azure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata outputLake",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Metadata_TEST_PAK_Source_OnPrem_Folder",
								"type": "DatasetReference",
								"parameters": {
									"subFolder": {
										"value": "@{pipeline().parameters.subFolder}",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter Folders",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata outputLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata outputLake').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach Folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Folders').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata Folder",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Metadata_TEST_PAK_Source_OnPrem",
											"type": "DatasetReference",
											"parameters": {
												"folderPath": {
													"value": "@item().name",
													"type": "Expression"
												},
												"subFolder": {
													"value": "@{pipeline().parameters.subFolder}",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems",
											"itemName"
										],
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If Metadata is complete",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(\n    activity('Get Metadata Folder').output.childItems, \n    json('{\n        \"name\": \"complete\",\n        \"type\": \"File\"\n    }'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "copy_PAK",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "BinarySource",
														"storeSettings": {
															"type": "FileServerReadSettings",
															"recursive": true,
															"deleteFilesAfterCompletion": false
														},
														"formatSettings": {
															"type": "BinaryReadSettings"
														}
													},
													"sink": {
														"type": "BinarySink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "PreserveHierarchy"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "Data_TEST_PAK_Source_OnPrem",
														"type": "DatasetReference",
														"parameters": {
															"subFolder": "@{pipeline().parameters.subFolder}",
															"folderPath": "@activity('Get Metadata Folder').output.itemName"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Data_TEST_PAK_Sink_Azure",
														"type": "DatasetReference",
														"parameters": {
															"folderPath": {
																"value": "@activity('Get Metadata Folder').output.itemName",
																"type": "Expression"
															},
															"subFolder": {
																"value": "@{pipeline().parameters.subFolder}",
																"type": "Expression"
															},
															"year": {
																"value": "@{formatDateTime(pipeline().TriggerTime, 'yyyy')}",
																"type": "Expression"
															},
															"month": {
																"value": "@{formatDateTime(pipeline().TriggerTime, 'MM')}",
																"type": "Expression"
															},
															"day": {
																"value": "@{formatDateTime(pipeline().TriggerTime, 'dd')}",
																"type": "Expression"
															},
															"basePath": {
																"value": "@{pipeline().parameters.basePath}",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Trigger Databricks Job",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "copy_PAK",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "trigger_test_pak_databricks_workflow",
														"type": "PipelineReference"
													},
													"waitOnCompletion": false,
													"parameters": {
														"environment": {
															"value": "@{pipeline().parameters.environment}",
															"type": "Expression"
														},
														"folderPath": {
															"value": "@{pipeline().parameters.subFolder}/@{formatDateTime(pipeline().TriggerTime, 'yyyy')}/@{formatDateTime(pipeline().TriggerTime, 'MM')}/@{formatDateTime(pipeline().TriggerTime, 'dd')}/@{activity('Get Metadata Folder').output.itemName}",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Delete Folder",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "copy_PAK",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "Data_TEST_PAK_Source_OnPrem",
														"type": "DatasetReference",
														"parameters": {
															"subFolder": {
																"value": "@activity('Get Metadata Folder').output.itemName",
																"type": "Expression"
															},
															"folderPath": {
																"value": "@{pipeline().parameters.subFolder}",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "FileServerReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"subFolder": {
						"type": "string",
						"defaultValue": "Completed"
					},
					"basePath": {
						"type": "string",
						"defaultValue": "raw"
					},
					"environment": {
						"type": "string",
						"defaultValue": "test"
					}
				},
				"folder": {
					"name": "TEST/subpipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_PROD_PAK_OnPrem_to_Azure_Cancelled')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_PROD_PAK_OnPrem_to_Azure",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy_PROD_PAK_OnPrem_to_Azure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subFolder": {
									"value": "@{pipeline().parameters.subFolder}",
									"type": "Expression"
								},
								"basePath": {
									"value": "@{pipeline().parameters.basePath}",
									"type": "Expression"
								},
								"environment": {
									"value": "@{pipeline().parameters.environment}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"subFolder": {
						"type": "string",
						"defaultValue": "Cancelled"
					},
					"basePath": {
						"type": "string",
						"defaultValue": "raw"
					},
					"environment": {
						"type": "string",
						"defaultValue": "prod"
					}
				},
				"folder": {
					"name": "PROD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_PROD_PAK_OnPrem_to_Azure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_PROD_PAK_OnPrem_to_Azure_Completed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_PROD_PAK_OnPrem_to_Azure",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy_PROD_PAK_OnPrem_to_Azure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subFolder": {
									"value": "@{pipeline().parameters.subFolder}",
									"type": "Expression"
								},
								"basePath": {
									"value": "@{pipeline().parameters.basePath}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"subFolder": {
						"type": "string",
						"defaultValue": "Completed"
					},
					"basePath": {
						"type": "string",
						"defaultValue": "raw"
					},
					"environment": {
						"type": "string",
						"defaultValue": "prod"
					}
				},
				"folder": {
					"name": "PROD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_PROD_PAK_OnPrem_to_Azure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_TEST_PAK_OnPrem_to_Azure_Completed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_TEST_PAK_OnPrem_to_Azure",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy_TEST_PAK_OnPrem_to_Azure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"subFolder": {
									"value": "@{pipeline().parameters.subFolder}",
									"type": "Expression"
								},
								"basePath": {
									"value": "@{pipeline().parameters.basePath}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"subFolder": {
						"type": "string",
						"defaultValue": "Completed"
					},
					"basePath": {
						"type": "string",
						"defaultValue": "raw"
					},
					"environment": {
						"type": "string",
						"defaultValue": "test"
					}
				},
				"folder": {
					"name": "TEST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_TEST_PAK_OnPrem_to_Azure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_TEST_PAK_Azure_to_onPrem')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "copy_TEST_PAK_Azure_to_onPrem",
							"type": "PipelineReference"
						},
						"parameters": {
							"fileName": "[parameters('copy_TEST_PAK_Azure_to_onPrem_properties_copy_TEST_PAK_Azure_to_onPrem_parameters_fileName')]",
							"folderPath": "[parameters('copy_TEST_PAK_Azure_to_onPrem_properties_copy_TEST_PAK_Azure_to_onPrem_parameters_folderPath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/test/blobs/released/",
					"blobPathEndsWith": ".json",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('copy_TEST_PAK_Azure_to_onPrem_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_TEST_PAK_Azure_to_onPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_TEST_PAK_onPrem_to_Azure')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "copy_TEST_PAK_OnPrem_to_Azure_Completed",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2023-06-29T10:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_TEST_PAK_OnPrem_to_Azure_Completed')]"
			]
		}
	]
}